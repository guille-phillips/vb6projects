ws := [REPEAT (OR comment, comment_long, IN 0 TO 32) MIN 0];
line_ws := {REPEAT OR [IN 0 TO 32, NOT 10, NOT 13], IN 10, 13 MIN 0};
number := {AND (REPEAT IN '0' TO '9'), ? (AND '.', REPEAT IN '0' TO '9')};
double_quoted_string := AND 34, REPEAT (OR 34+ 34, OR '\\', '\"', IN 0 TO 255, NOT 34) MIN 0, 34;
single_quoted_string := AND 39, REPEAT (OR 39+ 39, OR '\\', '\''', IN 0 TO 255, NOT 39) MIN 0, 39;
string := OR single_quoted_string, double_quoted_string;
reg_exp := {AND '/', (REPEAT OR '\/', SKIP UNTIL IN 0 - 31, '/' MIN 0), '/', REPEAT IN ^ 'igm' MIN 0 MAX 3};
expression_list := LIST ?(AND ?(AND string, ws, ['=>'], ws), expression), [AND ws, ',', ws] MIN 0;
identifier := {REPEAT IN CASE 'a' TO 'z', '0' TO '9', '_', '@', '.'};
index := REPEAT (OR (AND ['['], ws, expression_list, ws, [']']), (AND ['{'], ws, expression_list, ws, ['}'])) MIN 0;
array_literal := AND ['['], expression_list, [']'];
variable := AND {REPEAT IN CASE 'a' TO 'z', '0' TO '9', '_', '$'}, ws, index;
function_call := AND ? ^'new', ws, ?(AND identifier, ws, '::', ws), identifier, ws, ['('], ws, expression_list, ws, [')'];
simple_keyword := AND (OR ^'global', ^'return', ^'require_once', ^'include_once', ^'require', ^'include', ^'echo', (AND ^'print', NOT ^'f')), ws, expression, ws, [';'];
implicit_keyword := AND (OR ^'exit', ^'break'), ws, [';'];
assignment_operator := OR '=', '.=', '+=', '-=';
assignee := OR (AND identifier, ws, ['('], ws, expression_list, [')']), variable;
assignment := AND ? (OR ^'var', ^'public', ^'private'), ws, assignee, ws, assignment_operator, ws, (OR function_assignment_declaration, expression);
variable_declaration := AND (OR ^'var', ^'public', ^'private'), ws, identifier;
bracketed := AND ['('], ws, expression, ws, [')'];
unary := AND (OR '++', '--', '-', '+'), ws, variable;
unary_post := AND variable, ws, (OR '++', '--');
cast := AND ['('], ws, identifier, ws, [')'];
unary_other := AND (OR '!', cast), ws, expression_sub;
ternary := AND expression_sub, ws, ['?'], ws, expression_sub, ws, [':'], ws, expression_sub;
expression_sub := LIST (OR number, array_literal, anonymous_function_declaration, assignment, function_call, unary_post, unary, variable, string, reg_exp, unary_other, bracketed), (AND ws, (OR '!==', '!=', '===', '==', '->', '=>', '&&', '||', '%', '^', '*', '/', '+', '-', '<=', '>=', '<', '>', '.', '^', ^'or', ^'and', ^'xor'), ws);
expression := OR ternary, expression_sub;
parameter_list := LIST (AND ? '&', ws, expression), [AND ws, ',', ws] MIN 0;
class_declaration := AND ^'class', ws, identifier, ws, ? (AND ^'extends', ws, identifier, ws), block;
function_declaration := AND ?(AND (OR ^'public',^'private'), ws) ,^'function', ws, identifier, ws, ? (AND ['('], parameter_list, [')']), ws, block;
anonymous_function_declaration := AND ^'function', ws, ? (AND ['('], parameter_list, [')']), ws, block;
function_assignment_declaration := AND ^'function', ws, PASS, ws, ? (AND ['('], parameter_list, [')']), ws, block;
comment := {AND (OR '//', '#'), REPEAT SKIP UNTIL OR EOS, 10, 13};
comment_long := {AND '/*', (REPEAT SKIP UNTIL OR EOS, '*/'), (OR EOS, '*/')};
if_statement := AND [^'if'], ws, ['('], ws, expression, ws, [')'], ws, block, ? (AND ws, [^'else'], ws, (OR if_statement, block));
with_statement := AND [^'with'], ws, ['('], ws, expression, ws, [')'], ws, block;
for_statement := AND [^'for'], ws, ['('], ws, LIST ? expression, [AND ws, ';', ws] MIN 3 MAX 3, ws, [')'], ws, block;
foreach_statement := AND [^'foreach'], ws, ['('], ws, expression, ws, [^'as'], ws, expression, ws, [')'], ws, block;
switch_block := AND ['{'], REPEAT AND line_ws, (OR (AND ^'default', ws, ':'), (AND ^'case', ws, expression, ws, ':'), statement) MIN 0, ['}'];
switch_statement := AND [^'switch'], ws, ['('], ws, expression, ws, [')'], ws, switch_block;
while_statement := AND [^'while'], ws, ['('], ws, expression, ws, [')'], ws, block;
do_while_statement := AND [^'do'], ws, block, ws, AND [^'while'], ws, ['('], ws, expression, ws, [')'];
try_catch_statement := AND [^'try'], ws, block, ws, [^'catch'], ws, ['('], ws, expression, ws, [')'], ws, block;
return_statement := AND [^'return'], ws, expression;
statement := OR <comment>, <comment_long>, switch_statement, while_statement, do_while_statement, foreach_statement, for_statement, with_statement, if_statement, try_catch_statement, return_statement, implicit_keyword, simple_keyword, function_declaration, class_declaration, variable_declaration,(AND expression, ws, (OR [';'], (# * : |'}', *))), (AND ws, [';']), <ws>;
statements := REPEAT AND line_ws, statement MIN 0;
block := OR (AND ['{'], statements, ['}']), statement;
php := AND [OR ^'<?php', '<?'], (OR (AND statements, ~ # ~ : '?>'), (REPEAT SKIP UNTIL OR '?>', EOS)), ['?>'];
javascript := AND [~ # ~ : ^'<script'], open_tag, (OR (AND statements, ~ # ~ : ^'</script>'), (REPEAT SKIP UNTIL OR ^'</script>', EOS)), [^'</script>'];

string_value := REPEAT IN 33 TO 255, NOT '><';
attribute_value := OR string, string_value;
attribute := AND tag, ? (AND ws, ['='], ws, attribute_value);
tag := {REPEAT IN CASE 'a' TO 'z', '0' TO '9', ':', '-', '_', '!'};
non_closed_tag := OR ^'input', ^'img', ^'br', ^'!doctype', ^'meta', ^'link', ^'script', ^'area', ^'!--', ^'param';
open_tag := AND ['<'], ws, (OR non_closed_tag, tag), ws, (LIST (OR attribute, php), ws MIN 0), ws, ['>'];
close_tag := AND ['<'], ws, ['/'], tag, ws, ['>'];
text := AND SKIP, (REPEAT SKIP UNTIL OR '<?', open_tag, close_tag, EOS);
html := REPEAT OR php, javascript, css, open_tag, close_tag, text;

css_statements := LIST (OR comment_long, css_statement), [line_ws];
css_statement := AND css_selector, [line_ws], ?(AND ['('], css_attribute_list, [')']), [line_ws], '{', [line_ws], css_attribute_list, '}';
css_selector := LIST (css_simple_selector), (AND [line_ws], ?IN '+>,', [line_ws]);
css_simple_selector := AND ? (AND ? css_identifier, IN '.#'), css_identifier, ? css_attribute_selector, ? css_pseudo_selector;
css_pseudo_selector := AND ':', [line_ws], (OR (AND ^'lang', [line_ws], '(', [line_ws], css_identifier, [line_ws], ')'), css_identifier);
css_attribute_selector := AND '[', [line_ws], css_identifier, ? (AND (OR '|=', '~=', '='), string), [line_ws], ']';
css_attribute_list := REPEAT (OR comment_long, css_statement, css_attribute, ';', [line_ws]);
css_attribute := AND css_identifier, [line_ws], ':', [line_ws], css_attribute_value;
css_attribute_value_bracketed := AND '(', (REPEAT (AND (NOT ')'), SKIP)), ')';
css_attribute_value := REPEAT (OR css_attribute_value_bracketed, SKIP) UNTIL IN ';})';
css_identifier := {OR {REPEAT IN CASE 'a' TO 'z', '0' TO '9', '_', '-', '@'}, '*'};

css := AND [~ # ~ : ^'<style'], open_tag, [line_ws], (OR (AND css_statements, [line_ws], ~ # ~ : ^'</style>'), (REPEAT SKIP UNTIL OR ^'</style>', EOS)), [^'</style>'];

